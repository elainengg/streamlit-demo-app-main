import streamlit as st
import pandas as pd
import numpy as np

with open("styles.css") as f:
    st.markdown(f"<style>{f.read()}</style>", unsafe_allow_html=True)

# Center of the screen 
with st.container(key="welcome-to-chatbot"):
    st.markdown(
        """
        <div style='text-align: center;'>
            <img src="https://upload.wikimedia.org/wikipedia/commons/b/b8/TD_Securities_logo.svg" width="300">
            <h2>Welcome to Front Office Assistant.</h2>
            <p>You are responsible for any output generated by your use of this generative AI powered tool. 
            <br>This means you must validate the content it produces for you and confirm that it is permitted to be used for your purpose prior to any business use, in compliance with any legal, regulatory, attribution or other requirements.</p>
            <p>You may direct Compliance questions to <b>TDSecuritiesyayadada.com</b>
            <br>For app related questions, please reach out to <b>TDSecuritiesyayadada.com</b></p>
        </div>
        """,
        unsafe_allow_html=True
    )

# Unsure how to put chat up here
st.markdown("<div id='chat-scroll'>", unsafe_allow_html=True)
for msg in st.session_state.messages:
    role = msg["role"]
    class_name = "user-bubble" if role == "user" else "assistant-bubble"
    st.markdown(f"""
    <div style='text-align: {"right" if role == "user" else "left"};'>
        <div class='chat-bubble {class_name}'>
            {msg["content"]}
        </div>
    </div>
    """, unsafe_allow_html=True)
st.markdown("</div>", unsafe_allow_html=True)




# User input fixed to bottom
st.markdown(
    """
    <style>
    /* Fix the user input container to the bottom */
    div[data-testid="user-input-container"] {
        position: fixed;
        bottom: 0;
        left: 0;
        right: 0;
        background-color: white;
        padding: 1rem 2rem;
        box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.05);
        z-index: 999;
    }

    /* Prevent content from hiding behind the input bar */
    .main .block-container {
        padding-bottom: 180px;
    }
    </style>
    """,
    unsafe_allow_html=True
)


# Remove border from form 
st.markdown("""
            <style>
            div[data-testid="stForm"] {
            border: none;
            padding: 0;
            box-shadow: none;
            }
            </style>
            """, unsafe_allow_html=True)
with st.container(key="user-input-container"):
    with st.form("chat_form"):
        options = ["Research Chat", "Market Data"] 
        chat_type = st.radio("", options=options, horizontal=True, label_visibility="collapsed")

        col1, col2 = st.columns([3, 1])
        with col1:
            user_input = st.text_area(label="", height=100, label_visibility="collapsed")

        with col2:
            st.write("")  
            submitted = st.form_submit_button("Send")

        # Char count
        MAX_CHARS = 15000 
        char_count = len(user_input)
        st.markdown(
            f"<div style='text-align: left; color: gray;'>{char_count}/{MAX_CHARS}</div>", 
            unsafe_allow_html=True
        )
        if char_count > MAX_CHARS:
            st.warning("Character limit exceeded!")

    if submitted:
        st.write("Button Clicked")

        
    # Disclaimer
    st.write(
        "Artificial intelligence can make mistakes. Fact-check important information before using. Read our disclaimer here."
    )

